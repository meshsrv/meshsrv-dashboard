/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/is-uninitialized": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Check if the core server is uninitialized. Return true if there is no user in the database. */
        get: operations["getAuthIs-uninitialized"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/sign-in": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postAuthSign-in"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/sign-up": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description NOTE: Currently only allow one user to sign up. */
        post: operations["postAuthSign-up"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notification/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getNotificationList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notification/read": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["putNotificationRead"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/server/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getServerList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getUserInfo"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "getAuthIs-uninitialized": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                    "multipart/form-data": boolean;
                    "text/plain": boolean;
                };
            };
        };
    };
    "postAuthSign-in": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    username: string;
                    password: string;
                };
                "multipart/form-data": {
                    username: string;
                    password: string;
                };
                "text/plain": {
                    username: string;
                    password: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            token: string;
                        };
                    };
                    "multipart/form-data": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            token: string;
                        };
                    };
                    "text/plain": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            token: string;
                        };
                    };
                };
            };
        };
    };
    "postAuthSign-up": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    username: string;
                    password: string;
                };
                "multipart/form-data": {
                    username: string;
                    password: string;
                };
                "text/plain": {
                    username: string;
                    password: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            token: string;
                        };
                    };
                    "multipart/form-data": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            token: string;
                        };
                    };
                    "text/plain": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            token: string;
                        };
                    };
                };
            };
        };
    };
    getNotificationList: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            id: number;
                            level: "success" | "info" | "warning" | "error";
                            data: (string | number | boolean | null) | unknown[] | Record<string, never>;
                            read: boolean;
                            createdAt: Record<string, never>;
                        }[];
                    };
                    "multipart/form-data": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            id: number;
                            level: "success" | "info" | "warning" | "error";
                            data: (string | number | boolean | null) | unknown[] | Record<string, never>;
                            read: boolean;
                            createdAt: Record<string, never>;
                        }[];
                    };
                    "text/plain": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            id: number;
                            level: "success" | "info" | "warning" | "error";
                            data: (string | number | boolean | null) | unknown[] | Record<string, never>;
                            read: boolean;
                            createdAt: Record<string, never>;
                        }[];
                    };
                };
            };
        };
    };
    putNotificationRead: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": number[];
                "multipart/form-data": number[];
                "text/plain": number[];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: boolean;
                    };
                    "multipart/form-data": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: boolean;
                    };
                    "text/plain": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: boolean;
                    };
                };
            };
        };
    };
    getServerList: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            id: string;
                            spec: (string | number | boolean | null) | unknown[] | Record<string, never>;
                            latestPing: Record<string, never>;
                            latestReportOffline: Record<string, never> | null;
                        }[];
                    };
                    "multipart/form-data": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            id: string;
                            spec: (string | number | boolean | null) | unknown[] | Record<string, never>;
                            latestPing: Record<string, never>;
                            latestReportOffline: Record<string, never> | null;
                        }[];
                    };
                    "text/plain": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            id: string;
                            spec: (string | number | boolean | null) | unknown[] | Record<string, never>;
                            latestPing: Record<string, never>;
                            latestReportOffline: Record<string, never> | null;
                        }[];
                    };
                };
            };
        };
    };
    getUserInfo: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            id: number;
                            username: string;
                            passwordHash?: null;
                            nickname: string | null;
                        };
                    };
                    "multipart/form-data": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            id: number;
                            username: string;
                            passwordHash?: null;
                            nickname: string | null;
                        };
                    };
                    "text/plain": {
                        /** @default 0 */
                        code: number;
                        /** @default success */
                        msg: string;
                        data?: {
                            id: number;
                            username: string;
                            passwordHash?: null;
                            nickname: string | null;
                        };
                    };
                };
            };
        };
    };
}
